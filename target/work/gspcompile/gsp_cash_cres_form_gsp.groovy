import compte.Cres
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_cash_cres_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/cres/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: cresInstance, field: 'chiffreAffaires', 'error'))
printHtmlPart(1)
invokeTag('message','g',7,['code':("cres.chiffreAffaires.label"),'default':("Chiffre Affaires")],-1)
printHtmlPart(2)
invokeTag('field','g',10,['name':("chiffreAffaires"),'value':(fieldValue(bean: cresInstance, field: 'chiffreAffaires'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'chiffreAffairesNet', 'error'))
printHtmlPart(4)
invokeTag('message','g',16,['code':("cres.chiffreAffairesNet.label"),'default':("Chiffre Affaires Net")],-1)
printHtmlPart(2)
invokeTag('field','g',19,['name':("chiffreAffairesNet"),'value':(fieldValue(bean: cresInstance, field: 'chiffreAffairesNet'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'coutVentes', 'error'))
printHtmlPart(5)
invokeTag('message','g',25,['code':("cres.coutVentes.label"),'default':("Cout Ventes")],-1)
printHtmlPart(2)
invokeTag('field','g',28,['name':("coutVentes"),'value':(fieldValue(bean: cresInstance, field: 'coutVentes'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'margeBrute', 'error'))
printHtmlPart(6)
invokeTag('message','g',34,['code':("cres.margeBrute.label"),'default':("Marge Brute")],-1)
printHtmlPart(2)
invokeTag('field','g',37,['name':("margeBrute"),'value':(fieldValue(bean: cresInstance, field: 'margeBrute'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'autresChargesExploitations', 'error'))
printHtmlPart(7)
invokeTag('message','g',43,['code':("cres.autresChargesExploitations.label"),'default':("Autres Charges Exploitations")],-1)
printHtmlPart(2)
invokeTag('field','g',46,['name':("autresChargesExploitations"),'value':(fieldValue(bean: cresInstance, field: 'autresChargesExploitations'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'resultatExploitation', 'error'))
printHtmlPart(8)
invokeTag('message','g',52,['code':("cres.resultatExploitation.label"),'default':("Resultat Exploitation")],-1)
printHtmlPart(2)
invokeTag('field','g',55,['name':("resultatExploitation"),'value':(fieldValue(bean: cresInstance, field: 'resultatExploitation'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'produitsFinanciers', 'error'))
printHtmlPart(9)
invokeTag('message','g',61,['code':("cres.produitsFinanciers.label"),'default':("Produits Financiers")],-1)
printHtmlPart(2)
invokeTag('field','g',64,['name':("produitsFinanciers"),'value':(fieldValue(bean: cresInstance, field: 'produitsFinanciers'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'chargesFinancieres', 'error'))
printHtmlPart(10)
invokeTag('message','g',70,['code':("cres.chargesFinancieres.label"),'default':("Charges Financieres")],-1)
printHtmlPart(2)
invokeTag('field','g',73,['name':("chargesFinancieres"),'value':(fieldValue(bean: cresInstance, field: 'chargesFinancieres'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'resultatFinancier', 'error'))
printHtmlPart(11)
invokeTag('message','g',79,['code':("cres.resultatFinancier.label"),'default':("Resultat Financier")],-1)
printHtmlPart(2)
invokeTag('field','g',82,['name':("resultatFinancier"),'value':(fieldValue(bean: cresInstance, field: 'resultatFinancier'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'resultatCourantAvantImpot', 'error'))
printHtmlPart(12)
invokeTag('message','g',88,['code':("cres.resultatCourantAvantImpot.label"),'default':("Resultat Courant Avant Impot")],-1)
printHtmlPart(2)
invokeTag('field','g',91,['name':("resultatCourantAvantImpot"),'value':(fieldValue(bean: cresInstance, field: 'resultatCourantAvantImpot'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'impotsTaxes', 'error'))
printHtmlPart(13)
invokeTag('message','g',97,['code':("cres.impotsTaxes.label"),'default':("Impots Taxes")],-1)
printHtmlPart(2)
invokeTag('field','g',100,['name':("impotsTaxes"),'value':(fieldValue(bean: cresInstance, field: 'impotsTaxes'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'resultatApresImpot', 'error'))
printHtmlPart(14)
invokeTag('message','g',106,['code':("cres.resultatApresImpot.label"),'default':("Resultat Apres Impot")],-1)
printHtmlPart(2)
invokeTag('field','g',109,['name':("resultatApresImpot"),'value':(fieldValue(bean: cresInstance, field: 'resultatApresImpot'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'produitsExceptionnels', 'error'))
printHtmlPart(15)
invokeTag('message','g',115,['code':("cres.produitsExceptionnels.label"),'default':("Produits Exceptionnels")],-1)
printHtmlPart(2)
invokeTag('field','g',118,['name':("produitsExceptionnels"),'value':(fieldValue(bean: cresInstance, field: 'produitsExceptionnels'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'chargesExceptionnelles', 'error'))
printHtmlPart(16)
invokeTag('message','g',124,['code':("cres.chargesExceptionnelles.label"),'default':("Charges Exceptionnelles")],-1)
printHtmlPart(2)
invokeTag('field','g',127,['name':("chargesExceptionnelles"),'value':(fieldValue(bean: cresInstance, field: 'chargesExceptionnelles'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'resultatExceptionnel', 'error'))
printHtmlPart(17)
invokeTag('message','g',133,['code':("cres.resultatExceptionnel.label"),'default':("Resultat Exceptionnel")],-1)
printHtmlPart(2)
invokeTag('field','g',136,['name':("resultatExceptionnel"),'value':(fieldValue(bean: cresInstance, field: 'resultatExceptionnel'))],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: cresInstance, field: 'resultat', 'error'))
printHtmlPart(18)
invokeTag('message','g',142,['code':("cres.resultat.label"),'default':("Resultat")],-1)
printHtmlPart(2)
invokeTag('field','g',145,['name':("resultat"),'value':(fieldValue(bean: cresInstance, field: 'resultat'))],-1)
printHtmlPart(19)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1416839833615L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
